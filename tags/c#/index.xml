<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C# on Growth Record of Lettuce Farm: Extended</title><link>https://blog.fairy-lettuce.com/tags/c%23/</link><description>Recent content in C# on Growth Record of Lettuce Farm: Extended</description><generator>Hugo</generator><language>ja</language><copyright>&amp;copy;fairy-lettuce 2023</copyright><lastBuildDate>Tue, 22 Aug 2023 14:00:00 +0900</lastBuildDate><atom:link href="https://blog.fairy-lettuce.com/tags/c%23/index.xml" rel="self" type="application/rss+xml"/><item><title>C# 言語アップデートで使えるようになった新機能 2023 (.NET 5～7)</title><link>https://blog.fairy-lettuce.com/cp/misc/csharp/csharp-whatsnew-2023/</link><pubDate>Tue, 22 Aug 2023 14:00:00 +0900</pubDate><guid>https://blog.fairy-lettuce.com/cp/misc/csharp/csharp-whatsnew-2023/</guid><description>&lt;p&gt;2023 年の AtCoder 言語アップデートで新しく使えるようになった C# の機能について、競技プログラミングの観点で使えそうなものをピックアップします。&lt;/p&gt;
&lt;h2 id="native-aot"&gt;Native AOT&lt;/h2&gt;
&lt;p&gt;新しいコンパイル方式で、ネイティブのバイナリに変換してくれます。理論上 C++ 並みの実行速度を期待できるので、 C#er にとってはこの上ない福音でしょう。&lt;/p&gt;
&lt;p&gt;問題にもよりますが、C++ と C# (JIT) の間くらいの実行時間になります。もちろん、旧来のコンパイル方式 (JIT) も利用可能です。&lt;/p&gt;</description></item><item><title>オンラインジャッジにおける C# 実行環境まとめ</title><link>https://blog.fairy-lettuce.com/cp/misc/csharp/csharp-onlinejudges/</link><pubDate>Tue, 22 Aug 2023 14:00:00 +0900</pubDate><guid>https://blog.fairy-lettuce.com/cp/misc/csharp/csharp-onlinejudges/</guid><description>&lt;p&gt;C# は仕様や機能が比較的モダン [要出典] ながらも、その歴史とともに多くの仕様を追加して増築を繰り返してきた言語です。&lt;/p&gt;
&lt;p&gt;また、仕様が大きく異なる多様な処理系が存在したり言語仕様が昔の処理系では非常に不便だったりします。&lt;/p&gt;
&lt;p&gt;そのため、コーディングの感覚が実行環境によって比較的左右されやすい言語です。&lt;/p&gt;</description></item></channel></rss>